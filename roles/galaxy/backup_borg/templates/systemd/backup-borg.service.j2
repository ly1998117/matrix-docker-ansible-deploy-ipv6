#jinja2: lstrip_blocks: "True"
[Unit]
Description=Borg Backup
{% for service in backup_borg_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in backup_borg_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=oneshot
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ backup_borg_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ backup_borg_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_docker }} run --rm --name {{ backup_borg_identifier }} \
			--log-driver=none \
			--cap-drop=ALL \
			--read-only \
			--user={{ backup_borg_uid }}:{{ backup_borg_gid }} \
			--network={{ backup_borg_container_network }} \
			--tmpfs=/tmp:rw,noexec,nosuid,size={{ backup_borg_container_tmp_size }} \
			--mount type=bind,src={{ backup_borg_config_path }}/passwd,dst=/etc/passwd,ro \
			--mount type=bind,src={{ backup_borg_config_path }},dst=/etc/borgmatic.d,ro \
			{% for source in backup_borg_location_source_directories %}
			--mount type=bind,src={{ source }},dst={{ source }},ro \
			{% endfor %}
			{% for arg in backup_borg_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ backup_borg_docker_image }} \
			sh -c "borgmatic rcreate --encryption {{ backup_borg_encryption }}"

# The `CAP_DAC_OVERRIDE` capability is required, so that `root` in the container
# can read the `/etc/borgmatic.d/config.yaml` (`{{ backup_borg_config_path }}/config.yaml`) file,
# owned by `backup_borg_username:backup_borg_username` on the filesystem.
#
# `/root` is mountes as temporary filesystem, because we're using `--read-only` and because
# Borgmatic tries to write to at least a few paths under `/root` (`.config`, `.ssh`, `.borgmatic`).
ExecStart={{ devture_systemd_docker_base_host_command_docker }} run --rm --name {{ backup_borg_identifier }} \
			--log-driver=none \
			--cap-drop=ALL \
			--cap-add=CAP_DAC_OVERRIDE \
			--read-only \
			--network={{ backup_borg_container_network }} \
			--tmpfs=/root:rw,noexec,nosuid,size={{ backup_borg_container_tmp_size }} \
			--tmpfs=/tmp:rw,noexec,nosuid,size={{ backup_borg_container_tmp_size }} \
			--mount type=bind,src={{ backup_borg_config_path }}/passwd,dst=/etc/passwd,ro \
			--mount type=bind,src={{ backup_borg_config_path }},dst=/etc/borgmatic.d,ro \
			{% for source in backup_borg_location_source_directories %}
			--mount type=bind,src={{ source }},dst={{ source }},ro \
			{% endfor %}
			{% for arg in backup_borg_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ backup_borg_docker_image }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ backup_borg_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ backup_borg_identifier }} 2>/dev/null || true'
SyslogIdentifier={{ backup_borg_identifier }}

[Install]
WantedBy=multi-user.target
