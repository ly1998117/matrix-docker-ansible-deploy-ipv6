#jinja2: lstrip_blocks: "True"
[Unit]
Description=ntfy ({{ ntfy_identifier }})
{% for service in ntfy_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in ntfy_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ ntfy_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ ntfy_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} create \
			--rm \
			--name={{ ntfy_identifier }} \
			--log-driver=none \
			--user={{ ntfy_uid }}:{{ ntfy_gid }} \
			--cap-drop=ALL \
			--cap-add=NET_BIND_SERVICE \
			--read-only \
			--env NTFY_VISITOR_REQUEST_LIMIT_EXEMPT_HOSTS={{ ntfy_visitor_request_limit_exempt_hosts }} \
			{% for arg in ntfy_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			--network={{ ntfy_container_network }} \
			{% if ntfy_container_http_host_bind_port %}
			-p {{ ntfy_container_http_host_bind_port }}:8080 \
			{% endif %}
			--label-file={{ ntfy_base_path }}/labels \
			--health-interval={{ ntfy_container_health_interval }} \
			--mount type=bind,src={{ ntfy_config_dir_path }},dst=/etc/ntfy,ro \
			--mount type=bind,src={{ ntfy_data_path }},dst=/data \
			{{ ntfy_container_image }} \
			serve'

{% for network in ntfy_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ ntfy_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ ntfy_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ ntfy_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ ntfy_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ ntfy_identifier }}

[Install]
WantedBy=multi-user.target
