#jinja2: lstrip_blocks: "True"
[Unit]
Description=Automatic Backup of a Postgres server
{% for service in devture_postgres_backup_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ devture_postgres_backup_identifier }}
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ devture_postgres_backup_identifier }} 2>/dev/null || true'

ExecStart={{ devture_systemd_docker_base_host_command_docker }} run \
			--rm \
			--name={{ devture_postgres_backup_identifier }} \
			--log-driver=none \
			--user={{ devture_postgres_backup_uid }}:{{ devture_postgres_backup_gid }} \
			--cap-drop=ALL \
			--read-only \
			--network={{ devture_postgres_backup_container_network }} \
			--env-file={{ devture_postgres_backup_config_path }}/env \
			--mount type=bind,src={{ devture_postgres_backup_data_path }},dst=/backups \
			{{ devture_postgres_backup_container_image_to_use }}

ExecStop=-{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ devture_postgres_backup_identifier }}
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ devture_postgres_backup_identifier }} 2>/dev/null || true'
Restart=always
RestartSec=30
SyslogIdentifier={{ devture_postgres_backup_identifier }}

[Install]
WantedBy=multi-user.target
