---

- name: Ensure systemd is reloaded
  ansible.builtin.service:
    daemon_reload: true

- when: devture_systemd_service_manager_service_restart_mode == 'clean-stop-start'
  block:
    - name: Ensure systemd services are stopped
      ansible.builtin.service:
        name: "{{ item.name }}"
        state: stopped
      with_items: "{{ devture_systemd_service_manager_services_list | sort (attribute='priority,name', reverse=true) }}"
      when: not ansible_check_mode

    - name: Ensure systemd services are started
      ansible.builtin.service:
        name: "{{ item.name }}"
        state: started
        enabled: "{{ devture_systemd_service_manager_services_autostart_enabled }}"
      with_items: "{{ devture_systemd_service_manager_services_list | sort (attribute='priority,name') }}"
      when: not ansible_check_mode

- when: devture_systemd_service_manager_service_restart_mode == 'one-by-one'
  block:
    - name: Ensure systemd services are restarted one by one
      ansible.builtin.service:
        name: "{{ item.name }}"
        state: restarted
        enabled: "{{ devture_systemd_service_manager_services_autostart_enabled }}"
      with_items: "{{ devture_systemd_service_manager_services_list | sort (attribute='priority,name') }}"
      when: not ansible_check_mode

- when: devture_systemd_service_manager_up_verification_enabled | bool and not ansible_check_mode
  name: Verify that systemd services started successfully
  block:
    # If we check service state immediately, we may succeed,
    # because it takes some time for the service to attempt to start and actually fail.
    #
    # Waiting too long (30s) may not work for a similar reason,
    # as we may run into systemd's automatic restart logic retrying the service.
    - name: Wait a bit, so that services can start (or fail)
      ansible.builtin.wait_for:
        timeout: "{{ devture_systemd_service_manager_up_verification_delay_seconds }}"
      delegate_to: 127.0.0.1
      become: false

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Fail if service isn't detected to be running
      ansible.builtin.fail:
        msg: >-
          {{ item }} was not detected to be running.
          It's possible that there's a configuration problem or another service on your server interferes with it (uses the same ports, etc.).
          Try running `systemctl status {{ item }}` and `journalctl -fu {{ item }}` on the server to investigate.
          If you're on a slow or overloaded server, it may be that services take a longer time to start and that this error is a false-positive.
          You can consider raising the value of the `devture_systemd_service_manager_up_verification_delay_seconds` variable.
          See `{{ role_path }}/defaults/main.yml` for more details about that.
      with_items: "{{ devture_systemd_service_manager_services_list | map(attribute='name') }}"
      when:
        - "item.endswith('.service') and (ansible_facts.services[item] | default(none) is none or ansible_facts.services[item].state != 'running')"
